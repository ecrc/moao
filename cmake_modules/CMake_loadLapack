find_package(LAPACKE COMPONENTS LAPACKEXT)
if(LAPACK_FOUND AND LAPACK_LIBRARY_DIRS)
    # the RPATH to be used when installing
    list(APPEND CMAKE_INSTALL_RPATH "${LAPACK_LIBRARY_DIRS}")
else()
    message(FATAL_ERROR "A LAPACK library is required but has not been found")
endif()
if(LAPACKE_FOUND)
    include_directories(${LAPACKE_INCLUDE_DIRS})
    if(LAPACKE_LIBRARY_DIRS)
        # the RPATH to be used when installing
        list(APPEND CMAKE_INSTALL_RPATH "${LAPACKE_LIBRARY_DIRS}")
    endif()
    if(LAPACKE_LINKER_FLAGS)
        list(APPEND link_lib "${LAPACKE_LINKER_FLAGS}")
    endif()
    if (LAPACKE_LIBRARIES)
        if (LAPACKE_LIBRARIES_DEP)
            list(INSERT link_lib 0 "${LAPACKE_LIBRARIES_DEP}")
message(STATUS "LAPACKE ${LAPACKE_LIBRARIES_DEP} ")
        else()
            list(INSERT link_lib 0 "${LAPACKE_LIBRARIES}")
        endif()
    endif()
else()
    if(ECRC_VERBOSE_FIND_PACKAGE)
        if (LAPACKE_STANDALONE OR NOT LAPACKE_WORKS)
            if (NOT LAPACKE_lapacke.h_DIRS)
                Print_Find_Header_Status(lapacke lapacke.h)
            endif ()
            if (NOT LAPACKE_lapacke_LIBRARY)
                Print_Find_Library_Status(lapacke liblapacke)
            endif ()
        endif()
    else()
        message(WARNING "LAPACKE library has not been found and ECRC_VERBOSE_FIND_PACKAGE is set to OFF."
        " Try to activate ECRC_VERBOSE_FIND_PACKAGE option (-DECRC_VERBOSE_FIND_PACKAGE=ON) to get some hints for the detection")
    endif()
    message(FATAL_ERROR "A LAPACKE library is required but has not been found")
endif()

